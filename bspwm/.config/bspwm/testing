




# Try to keep size and position of the selected window
super + o
	bspc node -g private

# Make window sticky
super + i
	bspc node -g sticky

#
# Window moving and splitting
# ______________    

# Autopresel (split window in its largest dimension)
ctrl + space
	auto-presel
	
# Presel window for splitting in certain direction
alt + ctrl + {a,s,w,d}
	bspc node -p \~{west,south,north,east} -i

#alt + ctrl + {h,j,k,l}
#	bspc node -p \~{west,south,north,east}

alt + ctrl + {Left,Down,Up,Right}
	bspc node -p \~{west,south,north,east}

# Presel the desktop for splitting in certain direction
# alt + shift + {a,s,w,d}
	# bspc node @/ -p \~{west,south,north,east}
# 
# alt + shift + {h,j,k,l}
	# bspc node @/ -p \~{west,south,north,east}

# alt + shift + {Left,Down,Up,Right}
	# bspc node @/ -p \~{west,south,north,east}
# Set splitting ratio of windows
alt + ctrl + {1-9}
	bspc node -o 0.{1-9}



# Launching Applications
super + w
	$BROWSER


# media controls
super + p
	playerctl --player=$PLAYER play-pause 

# todo:
# super + shift + .
# 	playerctl --player=$PLAYER next 

# super + shift + ,
# 	playerctl --player=$PLAYER previous 






## Alternative: i3 style behavior (focus nth, desktop of the focused monitor)
#super + {1-9,0}
#	focusdesktopofthismonitor {1-9}
#super + shift + {1-9,0}
#	movetodesktopofthismonitor {1-9,10}

## Another alternative: xmonad style desktops. You have 10 desktops shared between all monitors,
## and focusing a desktop focuses it on the currently focused monitor
#super + {1-9,0}
#	summondesktop.sh {1-9,10}
#super + shift + {1-9,0}
#	bspc node -d ^{1-9,10}

# Select previous / next desktop
super + {m,n}
	bspc desktop -f {prev.occupied,next.occupied} 

# cycle windows
alt + {_,shift + }Tab
    bspc node -f {next,prev}

# Go to specific window
super + Tab
	WindowSelector
	
super +  {Left,Down,Up,Right}
    focusmover {west,south,north,east}
        	
# Move tiled windows. Moving a tiled window to 
# preselected one moves into preselection instead. 
# Moving out of the screen should move the window to next monitor if possible
super + shift + {a,s,w,d}
	windowgrabber {west,south,north,east}

#super + shift + {h,j,k,l}
#	windowgrabber {west,south,north,east}
	
# Different style of movement: transplant into window in chosen direction
super + shift + {Left,Down,Up,Right}
	euclid_mover {west,south,north,east}

#resize windows
super + ctrl + {a,s,w,d}
	bspwm_resize.sh {west,south,north,east}

#super + ctrl + {h,j,k,l}
#	bspwm_resize.sh {west,south,north,east}
	
super + ctrl + {Left,Down,Up,Right}
	bspwm_resize.sh {west,south,north,east}

#
# Layout manipulation/desktop level controls
# ______________    

# Toggle monocle mode
super + f 
	bspc desktop -l next
	
# Balance tree
super + b
	bspc node @/ -B

# Balance brother node. If you do this on biggest window of the desktop, it usually means balancing all windows with except the biggest.
super + alt + b
	bspc node @brother -B
	
# Undo balancing (equalize windows)
super + ctrl + b
	bspc node @/ -E

# Toggle automatic balancing of windows
alt + b
	euclid_balancer

# Mirror and flip leaves of tree
super + {comma,period}
	bspc node @/ -F {horizontal,vertical}
	
# Rotate leaves of tree
super + shift + {comma,period}
	bspc node @/ -R {90,270}

# Change window gap

super + g
	bspc config -d focused window_gap {$gap,$(($gap+$gap)),$(($gap+$gap+$gap))}

super + button{4,5}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 2 ))